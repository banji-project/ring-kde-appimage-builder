diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7bb635b..254e079 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -94,6 +94,7 @@ FIND_PACKAGE(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED
   PrintSupport
   QuickControls2
   Quick
+TextToSpeech X11Extras Concurrent
 )
 
 #FIND_PACKAGE(Qt5TextToSpeech ${QT_MIN_VERSION} QUIET)
@@ -120,6 +121,10 @@ FIND_PACKAGE(KF5 "${KF5_DEP_VERSION}" REQUIRED COMPONENTS
   NotifyConfig
   GlobalAccel
   Declarative
+ Archive
+ItemViews
+TextWidgets
+KIO
 )
 
 FIND_PACKAGE(KF5 "${AKO_DEP_VERSION}" QUIET COMPONENTS
diff --git a/src/main.cpp b/src/main.cpp
index 4dc41f4..8602baa 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -73,10 +85,6 @@ int main(int argc, char **argv)
       //Only start the application once
 #ifdef Q_OS_LINUX
 #ifndef DISABLE_KDBUS_SERVICE
-      KDBusService service(KDBusService::Unique);
-      QObject::connect(&service, &KDBusService::activateActionRequested, Cmd::instance(), &Cmd::slotActivateActionRequested);
-      QObject::connect(&service, &KDBusService::activateRequested      , Cmd::instance(), &Cmd::slotActivateRequested      );
-      QObject::connect(&service, &KDBusService::openRequested          , Cmd::instance(), &Cmd::slotOpenRequested          );
 #endif
 #endif
 
diff --git a/src/ringapplication.cpp b/src/ringapplication.cpp
index 9aaa2b3..393f495 100644
--- a/src/ringapplication.cpp
+++ b/src/ringapplication.cpp
@@ -473,7 +473,8 @@ FancyMainWindow* RingApplication::mainWindow() const
 void RingApplication::daemonTimeout()
 {
    if ((!CallModel::instance().isConnected()) || (!CallModel::instance().isValid())) {
-      KMessageBox::error(mainWindow(), ErrorMessage::NO_DAEMON_ERROR);
+      //KMessageBox::error(mainWindow(), ErrorMessage::NO_DAEMON_ERROR);
+      qDebug() << "\n\nNO DEADMON!!!";
       exit(1);
    }
 }
@@ -522,12 +523,13 @@ bool RingApplication::notify (QObject* receiver, QEvent* e)
       QTimer::singleShot(2500, this, &RingApplication::daemonTimeout);
    }
    catch (const QString& errorMessage) {
-      KMessageBox::error(mainWindow(),errorMessage);
+       qDebug() << "\n\n\nERROR:" << errorMessage;
+      //KMessageBox::error(mainWindow(),errorMessage);
       QTimer::singleShot(2500, this, &RingApplication::daemonTimeout);
    }
    catch (...) {
       qDebug() << ErrorMessage::GENERIC_ERROR;
-      KMessageBox::error(mainWindow(),ErrorMessage::GENERIC_ERROR);
+      //KMessageBox::error(mainWindow(),ErrorMessage::GENERIC_ERROR);
       QTimer::singleShot(2500, this, &RingApplication::daemonTimeout);
    }
    return false;
